import React from 'react';
import { SearchState } from '@/hooks/useTourSearch';
import styles from '../../components/search/search.module.css';

interface SearchStatusDisplayProps {
    searchState: SearchState;
    cancelSearch: (token: string) => void;
}

const SearchStatusDisplay: React.FC<SearchStatusDisplayProps> = ({ searchState, cancelSearch }) => {
    const renderStatusText = () => {
        switch (searchState.status) {
            case 'idle':
                return (
                    <p className={styles.statusText}>–í–≤–µ–¥—ñ—Ç—å –Ω–∞–ø—Ä—è–º–æ–∫ –¥–ª—è –ø–æ—á–∞—Ç–∫—É –ø–æ—à—É–∫—É —Ç—É—Ä—ñ–≤.</p>
                );
            case 'loading':
                return (
                    <p className={styles.statusText}>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è/–û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ä—Ç—É –ø–æ—à—É–∫—É...</p>
                );
            case 'waiting':
                return (
                    <p className={styles.statusText}>
                        ‚åõ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≥–æ—Ç—É—é—Ç—å—Å—è. –û—á—ñ–∫—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É...
                    </p>
                );
            case 'error':
                return (
                    <p className={`${styles.statusText} ${styles.errorText}`}>
                        ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É: {searchState.error}
                    </p>
                );
            case 'cancelled':
                return (
                    <p className={`${styles.statusText} ${styles.cancelledText}`}>
                        üö´ –ü–æ—à—É–∫ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.
                    </p>
                );
            case 'fetching_hotels':
                return <p className={styles.statusText}>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –≥–æ—Ç–µ–ª—ñ–≤...</p>;
            case 'success':
            default:
                return null;
        }
    };

    const showCancelButton =
        searchState.status === 'loading' ||
        searchState.status === 'waiting' ||
        searchState.status === 'fetching_hotels';

    return (
        <div className={styles.statusContainer}>
            {searchState.status !== 'success' && renderStatusText()}

            {showCancelButton && (
                <button
                    onClick={() => searchState.token && cancelSearch(searchState.token)}
                    className={styles.cancelButton}
                >
                    –°–∫–∞—Å—É–≤–∞—Ç–∏ –ü–æ—à—É–∫
                </button>
            )}
        </div>
    );
};

export default SearchStatusDisplay;
